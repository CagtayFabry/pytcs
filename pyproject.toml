[project]
name = "pytcs"
dynamic = [  # see: https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata
    "version",  # version gets derived from git by setuptools_scm.
]
authors = [
    {name="Cagtay Fabry", email="cagtay.fabry@bam.de"},
]
description = "Python API for processing TwinCAT Scope data files"
readme = {file = "README.md", content-type="text/markdown"}
license = {file = "LICENSE", name="BSD License"}
keywords = [
    "TwinCAT",
    "TwinCAT Scope",
    "file reader",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

# Dependencies
requires-python = ">=3.8"
dependencies = [
    "bidict",
    "numpy",
    "pandas >=1.2",
]

[project.optional-dependencies]
all = [
    "bottleneck>=1.3",
    "datatable",
    "pint>=0.18",
    "xarray>=0.15",
    ]
datatable = [
    "datatable",
    ]
export = [ # needed to create the test files using create_scope_configs.py
    "dicttoxml",
    "pyyaml",
    ]
test = [ # needed to run the test suite
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    ]

[project.urls]
# documentation = "https://pytcs.readthedocs.io"
repository = "https://github.com/CagtayFabry/pytcs"
bug_tracker = "https://github.com/CagtayFabry/pytcs/issues"
# changelog = "https://github.com/CagtayFabry/pytcs/blob/master/CHANGELOG.md"

[build-system]
requires = [
    "setuptools >=48",
    "setuptools_scm[toml] >=6.2",
    ]
build-backend = "setuptools.build_meta"

# Tool configs
[tool.setuptools.packages.find]
where = ["./pytcs"]

[tool.setuptools_scm]
write_to = "pytcs/_version.py"

[tool.pytest.ini_options]
addopts = "--tb=short --color=yes -rsw --cov=pytcs --cov-report=term-missing:skip-covered --doctest-modules"
testpaths = "tests"
# norecursedirs = "doc"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.isort]
profile = "black"
default_section = "THIRDPARTY"
known_first_party = "pytcs"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"

[tool.ruff]
line-length = 88
extend-exclude = [
    "./tests/**",
    "./resources/**",
]
# numpy docstrings
extend-select = ["D"]
extend-ignore = [
    "D107",
    "D203",
    "D212",
    "D213",
    "D402",
    "D413",
    "D415",
    "D416",
    "D417",
    "D400", # not working on newline after """
]

[tool.coverage.run]
source = ["pytcs"]

[tool.coverage.report]
omit = [
    "pytcs/_version.py",
    "tests/*",
]
exclude_lines = [
# Have to re-enable the standard pragma
    "pragma: no cover",

# ignore class __repr__-like functions:
    "def __repr__",
    "def __str__",
    "def _ipython_display_",
]
